services:
  db:
    image: postgres:17-alpine
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: .env
    ports:
      - "5432:5432"
    restart: always
    networks:
      - my_django_network

  redis:
    image: redis:latest
    container_name: redis_server
    restart: always
    expose:
      - 6379
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - my_django_network

  minio:
    image: minio/minio:latest
    container_name: my_minio_container
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    networks:
      - my_django_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  web:
    build: .
    restart: always
    command: gunicorn cloud_file_storage.wsgi:application --bind 0.0.0.0:8000 -w 3
    volumes:
      - ./logs:/app/logs
      - .:/app
      - static_volume:/app/staticfiles
    env_file: .env
    depends_on:
      - db
      - redis
      - minio
    networks:
      - my_django_network

  nginx:
    image: nginx:latest
    container_name: nginx-server
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./staticfiles/:/app/staticfiles/:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx_logs:/var/log/nginx
    depends_on:
      - web
    networks:
      - my_django_network

volumes:
  postgres_data:
  static_volume:
  redis_data:
  minio_data:

networks:
  my_django_network:
    driver: bridge